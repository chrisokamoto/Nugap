class UsuariosController < ApplicationController

#-----------------------------------------------
	def index
    		list
    		render :action => 'list'
  	end

  	#verify :method => :post, :only => [ :destroy, :create, :update ],
     #    :redirect_to => { :action => :list }
#-----------------------------------------------
  	def list
		@usuario = Usuario.all
    		#@usuario_pages, @usuarios = paginate :usuarios, :per_page => 10
		#render :action => :list
  	end
#-----------------------------------------------
  	def show
	    @usuario = Usuario.find(params[:id])
  	end
#-----------------------------------------------
  	def new
    		@usuario = Usuario.new
  	end
#-----------------------------------------------
	def create
		@usuario = Usuario.new(usuario_params)
		if @usuario.save
			flash.now[:notice] = 'Usuário cadastrado com sucesso.'
		else
			if params[:usuario][:login] != nil 
				if Usuario.find(:all, :conditions => "login = '" + params[:usuario][:login] + "'")
					flash.now[:alert] = 'Erro. Já existe um usuário cadastrado para este login.'
				end
			end
		end
  	end
#-----------------------------------------------
  	def edit
    		@usuario = Usuario.find(params[:id])
        puts "EDIT"
  	end
#-----------------------------------------------
	def update
		#@usuario = Usuario.find(params[:id])
		#if @usuario.update_attributes(usuario_params)
		#	@usuario.save
		#	redirect_to :action => 'index'
		#else
		#	redirect_to :action => 'index'
		#end

		@usuario = Usuario.find(params[:id])
		if @usuario.update_attributes(usuario_params)
			flash.now[:notice] = 'Usuário cadastrado com sucesso.'
		else
			if params[:usuario][:login] != nil 
				if Usuario.find(:all, :conditions => "login = '" + params[:usuario][:login] + "'")
					flash.now[:alert] = 'Erro. Já existe um usuário cadastrado para este login.'
				end
			end
		end	
	end
#-----------------------------------------------
	def destroy
		Usuario.find(params[:id]).destroy
		redirect_to :action => 'list'
	end
#-----------------------------------------------
	private
	def usuario_params
	  	params.fetch(:usuario, {}).permit(:nome, :sobrenome, :login, :senha, :confirmacao, :permissao, :salt, :encrypted_password)
	end
end
